{"ast":null,"code":"import _defineProperty from \"/home/luan/Documentos/ignitemodulo4/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/luan/Documentos/ignitemodulo4/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/luan/Documentos/ignitemodulo4/src/components/Form/input.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormErrorMessage } from '@chakra-ui/core';\nimport { Input as ChakraInput, FormLabel, FormControl } from '@chakra-ui/react';\nimport { forwardRef } from 'react';\n\nvar InputBase = function InputBase(_ref, ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      error = _ref.error,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"label\", \"error\"]);\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [!!label && /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }, _this), /*#__PURE__*/_jsxDEV(ChakraInput, _objectSpread(_objectSpread({\n      name: name,\n      id: name,\n      focusBorderColor: \"pink.500\",\n      bgColor: \"gray.900\",\n      variant: \"filled\",\n      _hover: {\n        bgColor: 'gray.900'\n      },\n      size: \"lg\"\n    }, rest), {}, {\n      ref: ref\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, _this), !!error && /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 26\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, _this);\n};\n\n_c = InputBase;\nexport var Input = /*#__PURE__*/forwardRef(InputBase);\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputBase\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["/home/luan/Documentos/ignitemodulo4/src/components/Form/input.tsx"],"names":["FormErrorMessage","Input","ChakraInput","FormLabel","FormControl","forwardRef","InputBase","ref","name","label","error","rest","bgColor","message"],"mappings":";;;;;;;;;;;AACA,SAASA,gBAAT,QAAiC,iBAAjC;AACA,SAAQC,KAAK,IAAIC,WAAjB,EAA6BC,SAA7B,EAAuCC,WAAvC,QAAyF,kBAAzF;AACA,SAAQC,UAAR,QAAkD,OAAlD;;AAWC,IAAMC,SAAgE,GAAI,SAApEA,SAAoE,OAAuCC,GAAvC,EAA+C;AAAA,MAA7CC,IAA6C,QAA7CA,IAA6C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAAzBC,IAAyB;;AACtH,sBAEE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACD,KAA1B;AAAA,eAEW,CAAC,CAACD,KAAF,iBAAW,QAAC,SAAD;AAAW,MAAA,OAAO,EAAGD,IAArB;AAAA,gBAA4BC;AAA5B;AAAA;AAAA;AAAA;AAAA,aAFtB,eAGc,QAAC,WAAD;AACC,MAAA,IAAI,EAAGD,IADR;AAEC,MAAA,EAAE,EAAEA,IAFL;AAIC,MAAA,gBAAgB,EAAC,UAJlB;AAKC,MAAA,OAAO,EAAE,UALV;AAMC,MAAA,OAAO,EAAC,QANT;AAOC,MAAA,MAAM,EAAG;AACJI,QAAAA,OAAO,EAAC;AADJ,OAPV;AAUC,MAAA,IAAI,EAAC;AAVN,OAWKD,IAXL;AAYC,MAAA,GAAG,EAAEJ;AAZN;AAAA;AAAA;AAAA;AAAA,aAHd,EAkBgB,CAAC,CAACG,KAAF,iBACG,QAAC,gBAAD;AAAA,gBACKA,KAAK,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,aAnBnB;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF;AA8BH,CA/BA;;KAAMP,S;AAiCP,OAAO,IAAML,KAAK,gBAAGI,UAAU,CAACC,SAAD,CAAxB;MAAML,K","sourcesContent":["\nimport { FormErrorMessage } from '@chakra-ui/core';\nimport {Input as ChakraInput,FormLabel,FormControl,InputProps as ChakraInputProps } from '@chakra-ui/react'\nimport {forwardRef,ForwardRefRenderFunction} from 'react';\nimport {FieldError} from 'react-hook-form'\n\n\ninterface InputProps extends ChakraInputProps {\n    name:string;\n    label?:string;\n    error:FieldError;\n\n}\n\n const InputBase :ForwardRefRenderFunction<HTMLInputElement,InputProps>  = ({name,label,error,...rest}:InputProps,ref) => {\n    return (\n\n      <FormControl isInvalid={!!error}>\n                \n                {!!label && <FormLabel htmlFor= {name}>{label}</FormLabel>}\n                    <ChakraInput\n                     name ={name}\n                     id={name}\n                     \n                     focusBorderColor=\"pink.500\"\n                     bgColor =\"gray.900\"\n                     variant=\"filled\"\n                     _hover ={{\n                          bgColor:'gray.900'\n                     }}\n                     size=\"lg\"\n                     {...rest}\n                     ref={ref}\n                    \n                     />\n                     {!!error && (\n                         <FormErrorMessage>\n                             {error.message}\n                         </FormErrorMessage>\n                     )}\n\n        </FormControl>\n\n\n    )\n}\n\nexport const Input = forwardRef(InputBase)"]},"metadata":{},"sourceType":"module"}