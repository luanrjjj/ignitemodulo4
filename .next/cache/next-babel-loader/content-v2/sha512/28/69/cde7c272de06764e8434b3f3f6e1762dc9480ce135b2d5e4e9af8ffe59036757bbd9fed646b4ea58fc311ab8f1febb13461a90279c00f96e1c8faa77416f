{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/luan/Documentos/ignitemodulo4/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/luan/Documentos/ignitemodulo4/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/luan/Documentos/ignitemodulo4/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/luan/Documentos/ignitemodulo4/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Flex, Button, Stack } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport { Header } from '../components/Header';\nimport { Input } from '../components/Form/input';\nvar signInFormSchema = yup.object().shape({\n  email: yup.string().required().email(),\n  password: yup.string().required()\n});\nexport default function signIn() {\n  _s();\n\n  var _useForm = useForm({\n    resolver: yupResolver(signInFormSchema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var errors = formState.errors;\n\n  var handleSignIn = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 2000);\n              });\n\n            case 2:\n              console.log(values);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSignIn(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100vw\",\n      h: \"100vh\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        as: \"form\",\n        width: \"100%\",\n        maxWidth: 360,\n        bg: \"gray.800\",\n        p: \"8\" //Medida Própria do Chakra \n        ,\n        borderRadius: 8,\n        flexDir: \"column\",\n        onSubmit: handleSubmit(handleSignIn),\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            name: \"email\",\n            type: \"email\",\n            label: \"E-mail\",\n            error: errors.email\n          }, register('email')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            name: \"password\",\n            type: \"password\",\n            label: \"Senha\",\n            error: errors.password\n          }, register('password')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          mt: \"6\",\n          colorScheme: \"pink\",\n          size: \"lg\",\n          isLoading: formState.isSubmitting,\n          children: \" Entrar \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n\n_s(signIn, \"E9ow2whL8epmpghVmNG9MmegJgY=\", false, function () {\n  return [useForm];\n});","map":{"version":3,"sources":["/home/luan/Documentos/ignitemodulo4/src/pages/index.tsx"],"names":["Flex","Button","Stack","useForm","Header","Input","signInFormSchema","yup","object","shape","email","string","required","password","signIn","resolver","yupResolver","register","handleSubmit","formState","errors","handleSignIn","values","event","Promise","resolve","setTimeout","console","log","isSubmitting"],"mappings":"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","sourcesContent":["import { Flex, Button, Stack } from '@chakra-ui/react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { Header } from '../components/Header'\nimport { Input } from '../components/Form/input'\n\n\n\ntype SignInFormData = {\n     email:string;\n     password:string;\n   \n}\n\nconst signInFormSchema = yup.object ().shape({\n     email:yup.string().required().email(),\n     password:yup.string().required(),\n})\n\n\nexport default function signIn() {\n     const { register, handleSubmit,formState } = useForm({\n          resolver:yupResolver(signInFormSchema)\n     });\n\n    const {errors} = formState\n\n     const handleSignIn: SubmitHandler<SignInFormData> = async(values,event) => { // Transformo em Assincriono pra demorar pra acontecer e o loading do Chakra aparecer na UI\n          await new Promise (resolve => setTimeout(resolve,2000));\n           \n          console.log(values)\n     }\n\n     return (\n          <>\n               <Header />\n               <Flex\n                    w=\"100vw\"\n                    h=\"100vh\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\">\n\n                    <Flex\n                         as=\"form\"\n                         width=\"100%\"\n                         maxWidth={360}\n                         bg=\"gray.800\"\n                         p=\"8\" //Medida Própria do Chakra \n                         borderRadius={8}\n                         flexDir=\"column\"\n                         onSubmit={handleSubmit(handleSignIn)}\n                    >\n\n                         <Stack spacing=\"4\">\n\n                              <Input name=\"email\" type=\"email\" label=\"E-mail\" error = {errors.email}  {...register('email')} />\n                              <Input name=\"password\" type=\"password\" label=\"Senha\" error= {errors.password} {...register('password')} />\n\n                         </Stack>\n\n                         <Button type=\"submit\" mt=\"6\" colorScheme=\"pink\" size=\"lg\" isLoading = {formState.isSubmitting}> Entrar </Button>\n                    </Flex>\n               </Flex>\n\n          </>\n\n     )\n\n\n}"]},"metadata":{},"sourceType":"module"}