{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/ignitemodulo4/src/components/SIdebar/NavLink.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Icon, Link as ChakraLink, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Link from 'next/link';\nexport function NavLink(_ref) {\n  let {\n    icon,\n    children,\n    href\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"icon\", \"children\", \"href\"]);\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    passHref: true,\n    children: /*#__PURE__*/_jsxDEV(ChakraLink, _objectSpread(_objectSpread({\n      display: \"flex\",\n      align: \"center\"\n    }, rest), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        as: icon,\n        fontSize: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        ml: \"4\",\n        fontWeight: \"medium\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/luan/Documentos/ignitemodulo4/src/components/SIdebar/NavLink.tsx"],"names":["Icon","Link","ChakraLink","Text","React","NavLink","icon","children","href","rest"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,IAAI,IAAIC,UAAvB,EAAmCC,IAAnC,QAA6E,kBAA7E;AACA,OAAOC,KAAP,MAAmC,OAAnC;AAEA,OAAOH,IAAP,MAAiB,WAAjB;AAQA,OAAO,SAASI,OAAT,OAAiE;AAAA,MAAhD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAiBC,IAAAA;AAAjB,GAAgD;AAAA,MAAtBC,IAAsB;;AACpE,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,QAAQ,MAA1B;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC;AAAjC,OAA8CC,IAA9C;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEH,IAAV;AAAgB,QAAA,QAAQ,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,UAAU,EAAC,QAAxB;AAAA,kBAAkCC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH","sourcesContent":["import { Icon, Link as ChakraLink, Text, LinkProps as ChakraLinkProps } from \"@chakra-ui/react\";\nimport React, { ElementType } from \"react\";\nimport { RiDashboardLine } from \"react-icons/ri\";\nimport Link from 'next/link';\n\n\ninterface NavLinkProps {\n    icon: ElementType;\n    children: string;\n    href:string;\n}\nexport function NavLink({ icon, children,href, ...rest }: NavLinkProps) {\n    return (\n        <Link href={href} passHref> \n            <ChakraLink display=\"flex\" align=\"center\" {...rest}>\n\n                <Icon as={icon} fontSize=\"20\" />\n                <Text ml=\"4\" fontWeight=\"medium\">{children}</Text>\n            </ChakraLink>\n        </Link>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}