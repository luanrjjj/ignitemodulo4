{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/ignitemodulo4/src/components/Form/input.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { FormLabel, FormControl } from '@chakra-ui/react';\nexport function Input(_ref) {\n  let {\n    name,\n    label\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"label\"]);\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"email\",\n      children: \"E-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this), !!label && /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n      name: name,\n      id: name,\n      focusBorderColor: \"pink.500\",\n      bgColor: \"gray.900\",\n      variant: \"filled\",\n      _hover: {\n        bgColor: 'gray.900'\n      },\n      size: \"lg\"\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/home/luan/Documentos/ignitemodulo4/src/components/Form/input.tsx"],"names":["FormLabel","FormControl","Input","name","label","rest","bgColor"],"mappings":";;;;;;;;;;;;;AACA,SAAmDA,SAAnD,EAA6DC,WAA7D,QAA+G,kBAA/G;AAQA,OAAO,SAASC,KAAT,OAAiD;AAAA,MAAjC;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAiC;AAAA,MAAlBC,IAAkB;;AACpD,sBAEE,QAAC,WAAD;AAAA,4BACU,QAAC,SAAD;AAAW,MAAA,OAAO,EAAG,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADV,EAEW,CAAC,CAACD,KAAF,iBAAW,QAAC,SAAD;AAAW,MAAA,OAAO,EAAGD,IAArB;AAAA,gBAA4BC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFtB,eAGc,QAAC,KAAD;AACC,MAAA,IAAI,EAAGD,IADR;AAEC,MAAA,EAAE,EAAEA,IAFL;AAIC,MAAA,gBAAgB,EAAC,UAJlB;AAKC,MAAA,OAAO,EAAE,UALV;AAMC,MAAA,OAAO,EAAC,QANT;AAOC,MAAA,MAAM,EAAG;AACJG,QAAAA,OAAO,EAAC;AADJ,OAPV;AAUC,MAAA,IAAI,EAAC;AAVN,OAWKD,IAXL;AAAA;AAAA;AAAA;AAAA,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAwBH","sourcesContent":["\nimport { Flex, Input as ChakraInput, Button, Stack,FormLabel,FormControl,InputProps as ChakraInputProps } from '@chakra-ui/react'\n\ninterface InputProps extends ChakraInputProps {\n    name:string;\n    label?:string;\n\n}\n\nexport function Input ({name,label,...rest}:InputProps) {\n    return (\n\n      <FormControl>\n                <FormLabel htmlFor = \"email\">E-mail</FormLabel>\n                {!!label && <FormLabel htmlFor= {name}>{label}</FormLabel>}\n                    <Input \n                     name ={name}\n                     id={name}\n                     \n                     focusBorderColor=\"pink.500\"\n                     bgColor =\"gray.900\"\n                     variant=\"filled\"\n                     _hover ={{\n                          bgColor:'gray.900'\n                     }}\n                     size=\"lg\"\n                     {...rest}\n                    \n                     />\n\n        </FormControl>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}