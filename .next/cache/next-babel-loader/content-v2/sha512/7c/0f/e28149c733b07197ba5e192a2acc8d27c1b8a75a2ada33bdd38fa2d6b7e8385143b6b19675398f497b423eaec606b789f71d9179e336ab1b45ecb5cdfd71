{"ast":null,"code":"import { useQuery } from \"react-query\";\nimport { api } from \"../../services/api\";\nexport async function getUsers(page) {\n  const {\n    data,\n    headers\n  } = await api.get('users', {\n    params: {\n      page\n    }\n  });\n  const totalCount = Number(headers['x-total-count']);\n  const users = data.users.map(user => {\n    return {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      createdAt: new Date(user.createdAt).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      })\n    };\n  });\n  return users;\n}\nexport function useUsers(page) {\n  return useQuery('users', () => getUsers(page), {\n    staleTime: 1000 * 5\n  });\n}","map":{"version":3,"sources":["/home/luan/Documentos/ignitemodulo4/src/services/hooks/useUsers.ts"],"names":["useQuery","api","getUsers","page","data","headers","get","params","totalCount","Number","users","map","user","id","name","email","createdAt","Date","toLocaleDateString","day","month","year","useUsers","staleTime"],"mappings":"AAAA,SAASA,QAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AAUA,OAAO,eAAeC,QAAf,CAAwBC,IAAxB,EAAqD;AAExD,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiB,MAAMJ,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAgB;AACzCC,IAAAA,MAAM,EAAE;AACJJ,MAAAA;AADI;AADiC,GAAhB,CAA7B;AAKI,QAAMK,UAAU,GAAGC,MAAM,CAACJ,OAAO,CAAC,eAAD,CAAR,CAAzB;AAEA,QAAMK,KAAK,GAAGN,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAG;AAChC,WAAO;AACHC,MAAAA,EAAE,EAACD,IAAI,CAACC,EADL;AAEHC,MAAAA,IAAI,EAACF,IAAI,CAACE,IAFP;AAGHC,MAAAA,KAAK,EAACH,IAAI,CAACG,KAHR;AAIHC,MAAAA,SAAS,EAAC,IAAIC,IAAJ,CAASL,IAAI,CAACI,SAAd,EAAyBE,kBAAzB,CAA4C,OAA5C,EAAoD;AAC1DC,QAAAA,GAAG,EAAC,SADsD;AAE1DC,QAAAA,KAAK,EAAC,MAFoD;AAG1DC,QAAAA,IAAI,EAAC;AAHqD,OAApD;AAJP,KAAP;AAYH,GAba,CAAd;AAeA,SAAOX,KAAP;AAEH;AAED,OAAO,SAASY,QAAT,CAAmBnB,IAAnB,EAAgC;AACnC,SAAOH,QAAQ,CAAE,OAAF,EAAU,MAAME,QAAQ,CAACC,IAAD,CAAxB,EAA+B;AAC9CoB,IAAAA,SAAS,EAAC,OAAK;AAD+B,GAA/B,CAAf;AAIP","sourcesContent":["import { useQuery} from \"react-query\";\nimport { api } from \"../../services/api\";\n\n\ntype User = {\n    id:string;\n    name:string;\n    email:string;\n    createdAt:string;\n}\n\nexport async function getUsers(page:number):Promise<User[]> {\n\n    const {data,headers} = await api.get('users',{\n        params: {\n            page,\n        }\n    })\n        const totalCount = Number(headers['x-total-count'])\n\n        const users = data.users.map(user=> {\n            return {\n                id:user.id,\n                name:user.name,\n                email:user.email,\n                createdAt:new Date(user.createdAt).toLocaleDateString('pt-BR',{\n                    day:'2-digit',\n                    month:'long',\n                    year:'numeric',\n                })\n             \n            };\n\n        })\n       \n        return users;\n\n    }\n    \n    export function useUsers (page:number) {\n        return useQuery ('users',() => getUsers(page),{\n        staleTime:1000*5,\n    })\n  \n}\n"]},"metadata":{},"sourceType":"module"}