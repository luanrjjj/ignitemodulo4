{"ast":null,"code":"import _regeneratorRuntime from \"/home/luan/Documentos/ignitemodulo4/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/luan/Documentos/ignitemodulo4/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { api } from \"../../services/api\";\nexport function getUsers() {\n  return _getUsers.apply(this, arguments);\n}\n\nfunction _getUsers() {\n  _getUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$api$get, data, users;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get('users');\n\n          case 2:\n            _yield$api$get = _context.sent;\n            data = _yield$api$get.data;\n            users = data.users.map(function (user) {\n              return {\n                id: user.id,\n                name: user.name,\n                email: user.email,\n                createdAt: new Date(user.createdAt).toLocaleDateString('pt-BR', {\n                  day: '2-digit',\n                  month: 'long',\n                  year: 'numeric'\n                })\n              };\n            });\n            return _context.abrupt(\"return\", users);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getUsers.apply(this, arguments);\n}\n\nexport function useUsers(page) {\n  _s();\n\n  return useQuery('users', function () {\n    return getUsers(page);\n  }, {\n    staleTime: 1000 * 5\n  });\n}\n\n_s(useUsers, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/home/luan/Documentos/ignitemodulo4/src/services/hooks/useUsers.ts"],"names":["useQuery","api","getUsers","get","data","users","map","user","id","name","email","createdAt","Date","toLocaleDateString","day","month","year","useUsers","page","staleTime"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AAUA,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBD,GAAG,CAACE,GAAJ,CAAQ,OAAR,CAFlB;;AAAA;AAAA;AAEIC,YAAAA,IAFJ,kBAEIA,IAFJ;AAIOC,YAAAA,KAJP,GAIeD,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAG;AAChC,qBAAO;AACHC,gBAAAA,EAAE,EAACD,IAAI,CAACC,EADL;AAEHC,gBAAAA,IAAI,EAACF,IAAI,CAACE,IAFP;AAGHC,gBAAAA,KAAK,EAACH,IAAI,CAACG,KAHR;AAIHC,gBAAAA,SAAS,EAAC,IAAIC,IAAJ,CAASL,IAAI,CAACI,SAAd,EAAyBE,kBAAzB,CAA4C,OAA5C,EAAoD;AAC1DC,kBAAAA,GAAG,EAAC,SADsD;AAE1DC,kBAAAA,KAAK,EAAC,MAFoD;AAG1DC,kBAAAA,IAAI,EAAC;AAHqD,iBAApD;AAJP,eAAP;AAYH,aAba,CAJf;AAAA,6CAmBQX,KAnBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuBH,OAAO,SAASY,QAAT,CAAmBC,IAAnB,EAAgC;AAAA;;AACnC,SAAOlB,QAAQ,CAAE,OAAF,EAAU;AAAA,WAAME,QAAQ,CAACgB,IAAD,CAAd;AAAA,GAAV,EAA+B;AAC9CC,IAAAA,SAAS,EAAC,OAAK;AAD+B,GAA/B,CAAf;AAIP;;GALmBF,Q;UACLjB,Q","sourcesContent":["import { useQuery} from \"react-query\";\nimport { api } from \"../../services/api\";\n\n\ntype User = {\n    id:string;\n    name:string;\n    email:string;\n    createdAt:string;\n}\n\nexport async function getUsers():Promise<User[]> {\n\n    const {data} = await api.get('users')\n    \n        const users = data.users.map(user=> {\n            return {\n                id:user.id,\n                name:user.name,\n                email:user.email,\n                createdAt:new Date(user.createdAt).toLocaleDateString('pt-BR',{\n                    day:'2-digit',\n                    month:'long',\n                    year:'numeric',\n                })\n             \n            };\n\n        })\n       \n        return users;\n\n    }\n    \n    export function useUsers (page:number) {\n        return useQuery ('users',() => getUsers(page),{\n        staleTime:1000*5,\n    })\n  \n}\n"]},"metadata":{},"sourceType":"module"}